// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserCredential {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  userProfile UserProfile?
}

model UserProfile {
  id               String   @id @default(uuid())
  userCredentialId String   @unique
  name             String
  address          String
  phone            String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now())

  userCredential UserCredential @relation(fields: [userCredentialId], references: [id])
}

model Admin {
  id           String   @id @default(uuid())
  username     String   @unique
  password     String
  name         String
  isSuperAdmin Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
}

model Package {
  id        String   @id @default(uuid())
  name      String   @unique
  duration  Float
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  PackageOnService PackageOnService[]
}

model Service {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  PackageOnService PackageOnService[]
}

model PackageOnService {
  id          String        @id @default(uuid())
  packageId   String
  serviceId   String
  price       Float
  OrderDetail OrderDetail[]

  package Package @relation(fields: [packageId], references: [id])
  service Service @relation(fields: [serviceId], references: [id])
}

enum OrderStatus {
  // PAYMENT
  PICKED_UP
  ON_PROGRESS
  ON_DELIVER
  DONE
  CANCEL
}

model Order {
  id               String        @id @default(uuid())
  userCredentialId String
  transcation      Transaction?
  orderDetail      OrderDetail[]
  redirectUrl      String?       @unique
  amount           Float         @default(0)
  orderStatus      OrderStatus   @default(PICKED_UP)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @default(now())

  userCredential UserCredential @relation(fields: [userCredentialId], references: [id])
}

model OrderDetail {
  id                 String   @id @default(uuid())
  orderId            String
  packageOnServiceId String
  quantity           Float    @default(0)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @default(now())

  Order            Order            @relation(fields: [orderId], references: [id])
  packageOnService PackageOnService @relation(fields: [packageOnServiceId], references: [id])
}

enum TransactionStatus {
  PENDING
  FAILURE
  SUCCESS
}

model Transaction {
  id                String            @id @default(uuid())
  orderId           String            @unique
  amount            Float
  transactionStatus TransactionStatus @default(PENDING)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @default(now())

  order Order @relation(fields: [orderId], references: [id])
}
